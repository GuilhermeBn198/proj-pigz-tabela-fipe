<?php
// src/Service/FipeService.php
namespace App\Service;

use App\Dto\Fipe\BrandRequest;
use App\Dto\Fipe\ModelRequest;
use App\Dto\Fipe\YearRequest;
use App\Entity\Brand;
use App\Entity\Model;
use App\Entity\Year;
use App\Repository\BrandRepository;
use App\Repository\ModelRepository;
use App\Repository\YearRepository;
use Doctrine\ORM\EntityManagerInterface;

class FipeService
{
    public function __construct(
        private BrandRepository $brandRepo,
        private ModelRepository $modelRepo,
        private YearRepository $yearRepo,
        private EntityManagerInterface $em
    ) {}

    // BRANDS
    public function listBrands(): array
    {
        return $this->brandRepo->findAll();
    }

    public function createBrand(BrandRequest $dto): Brand
    {
        $brand = new Brand();
        $brand->setName($dto->name)
              ->setFipeCode($dto->fipeCode);
        $this->em->persist($brand);
        $this->em->flush();
        return $brand;
    }

    public function updateBrand(Brand $brand, BrandRequest $dto): Brand
    {
        $brand->setName($dto->name)
              ->setFipeCode($dto->fipeCode);
        $this->em->flush();
        return $brand;
    }

    public function deleteBrand(Brand $brand): void
    {
        $this->em->remove($brand);
        $this->em->flush();
    }

    // MODELS
    public function listModels(Brand $brand): array
    {
        return $this->modelRepo->findBy(['brand' => $brand]);
    }

    public function createModel(ModelRequest $dto): Model
    {
        $model = new Model();
        $model->setName($dto->name)
              ->setFipeCode($dto->fipeCode)
              ->setBrand($dto->brand);
        $this->em->persist($model);
        $this->em->flush();
        return $model;
    }

    public function updateModel(Model $model, ModelRequest $dto): Model
    {
        $model->setName($dto->name)
              ->setFipeCode($dto->fipeCode)
              ->setBrand($dto->brand);
        $this->em->flush();
        return $model;
    }

    public function deleteModel(Model $model): void
    {
        $this->em->remove($model);
        $this->em->flush();
    }

    // YEARS
    public function listYears(Model $model): array
    {
        return $this->yearRepo->findBy(['model' => $model]);
    }

    public function createYear(YearRequest $dto): Year
    {
        $year = new Year();
        $year->setName($dto->name)
             ->setFipeCode($dto->fipeCode)
             ->setModel($dto->model);
        $this->em->persist($year);
        $this->em->flush();
        return $year;
    }

    public function updateYear(Year $year, YearRequest $dto): Year
    {
        $year->setName($dto->name)
             ->setFipeCode($dto->fipeCode)
             ->setModel($dto->model);
        $this->em->flush();
        return $year;
    }

    public function deleteYear(Year $year): void
    {
        $this->em->remove($year);
        $this->em->flush();
    }
}